plugins {
    id "idea"
    id "java-library"
    id "me.champeau.jmh" version "0.6.6"
    id "com.vanniktech.maven.publish" version "0.18.0"
}

allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
}

group 'com.trivago'
version '0.2.0'

mavenPublishing {
    pom {
        name = "fastutil-concurrent-wrapper"
        description = "Set of concurrent wrappers around fastutil primitive maps."
        url = "https://github.com/trivago/fastutil-concurrent-wrapper"
        licenses {
            license {
                name = "The Apache Software License, Version 2.0"
                url = "https://opensource.org/licenses/Apache-2.0"
                distribution = "repo"
            }
        }
        developers {
            developer {
                id = "mchernyakov"
                name = "Mikhail Chernyakov"
                url = "https://github.com/mchernyakov"
            }
            developer {
                id = "erdoganf"
                name = "Fehim Erdogan"
                url = "https://github.com/erdoganf"
            }
        }
        scm {
            url = "https://github.com/trivago/fastutil-concurrent-wrapper"
            connection = "scm:git:https://github.com/trivago/fastutil-concurrent-wrapper"
            developerConnection = "scm:git:https://github.com/trivago/fastutil-concurrent-wrapper"
        }
    }
}

sourceCompatibility = 11
targetCompatibility = 11

sourceSets {
    jmh {
        java.srcDirs = ['src/jmh/java']
        resources.srcDirs = ['src/jmh/resources']
        compileClasspath += sourceSets.main.runtimeClasspath
    }
}

dependencies {
    implementation group: 'it.unimi.dsi', name: 'fastutil', version: '8.5.9'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

test {
    useJUnitPlatform()
}

jar {
    archiveBaseName.set('fastutil-concurrent-wrapper')
}

// ./gradlew publish --no-daemon --no-parallel
// ./gradlew closeAndReleaseRepository
publishing {
    repositories {
        maven {
            def releasesRepoUrl = "$buildDir/repos/releases"
            def snapshotsRepoUrl = "$buildDir/repos/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

// ./gradlew jmh
jmh {
    jvmArgs = ["-Xms3072m","-Xmx3072m"]
    duplicateClassesStrategy = DuplicatesStrategy.EXCLUDE
}
